{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","authorship_tag":"ABX9TyOy9jB5Q3iOY7U+OcDQeYHY"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","widgets":{"application/vnd.jupyter.widget-state+json":{"c36fa130e60744e38dfb9ebd7173e537":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6ae690939dcd4a18a15114e4217462e6","IPY_MODEL_be11146d3826428db60926820e2364a4","IPY_MODEL_fb6b1f4ea0bf422da1b81a367d02f4fc"],"layout":"IPY_MODEL_30ee24827b2143b5a601c13a49d7a8c3"}},"6ae690939dcd4a18a15114e4217462e6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_63a165bc82ba432bbaaf8595e28164b0","placeholder":"​","style":"IPY_MODEL_94defcfaa534492092795083a8509968","value":"hyperparams.yaml: "}},"be11146d3826428db60926820e2364a4":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_822ce724da28434a86679eb9bdbd9b30","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_23a499c7ec604ca0b673c431b626b9d4","value":1}},"fb6b1f4ea0bf422da1b81a367d02f4fc":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8490862845524a5eb989a4612a88fc98","placeholder":"​","style":"IPY_MODEL_1a0a362c49664e77a5aeeefd4ec46ea1","value":" 1.92k/? [00:00&lt;00:00, 102kB/s]"}},"30ee24827b2143b5a601c13a49d7a8c3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"63a165bc82ba432bbaaf8595e28164b0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"94defcfaa534492092795083a8509968":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"822ce724da28434a86679eb9bdbd9b30":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"23a499c7ec604ca0b673c431b626b9d4":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8490862845524a5eb989a4612a88fc98":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"1a0a362c49664e77a5aeeefd4ec46ea1":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"fdeebc93610e44bbb5bd6195d6b5745e":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_9f1bec3548b24142847365ed70b8638a","IPY_MODEL_49b1dc36f13b4ca7bcc7947dd55d12d8","IPY_MODEL_413668189622415ab22909034c514577"],"layout":"IPY_MODEL_ac3c0b4a1f6c43b69c0109e32ab8ff57"}},"9f1bec3548b24142847365ed70b8638a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_6c3749d5397b4ad992dff3446c6b3590","placeholder":"​","style":"IPY_MODEL_c95429552c694758994b5125d4d5ef72","value":"embedding_model.ckpt: 100%"}},"49b1dc36f13b4ca7bcc7947dd55d12d8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_59ce8bee85c64b77a210dce94893e2da","max":83316686,"min":0,"orientation":"horizontal","style":"IPY_MODEL_ad3252b1cdd244b49c9303dd979d1a0e","value":83316686}},"413668189622415ab22909034c514577":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e56afa4641b4433e96d740d053743ac2","placeholder":"​","style":"IPY_MODEL_cc4db9a8813a4f71aad482f404763d86","value":" 83.3M/83.3M [00:00&lt;00:00, 182MB/s]"}},"ac3c0b4a1f6c43b69c0109e32ab8ff57":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"6c3749d5397b4ad992dff3446c6b3590":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c95429552c694758994b5125d4d5ef72":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"59ce8bee85c64b77a210dce94893e2da":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ad3252b1cdd244b49c9303dd979d1a0e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"e56afa4641b4433e96d740d053743ac2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"cc4db9a8813a4f71aad482f404763d86":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"99e2860d38464ef0bff93faf84529ef2":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_042f42d0179c4e3492c5dbf988454376","IPY_MODEL_2e6ffa21fc14419dbdfa2354f3e364d3","IPY_MODEL_d2f439cef92e4eccbc038fe848fafc2a"],"layout":"IPY_MODEL_74bf1476ef9a425f845e126510873dee"}},"042f42d0179c4e3492c5dbf988454376":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_e89a88e55b0f453288c7afaadd7931b2","placeholder":"​","style":"IPY_MODEL_4e375630f1e64481a64c427d9bc2a2a3","value":"mean_var_norm_emb.ckpt: 100%"}},"2e6ffa21fc14419dbdfa2354f3e364d3":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_9aa3083157ec49d4a67c9d9b86938fe3","max":1921,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e09339a86f2842649f2ec4362894d5e5","value":1921}},"d2f439cef92e4eccbc038fe848fafc2a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9df1fa3f8bad4d9b920a59eed0bae55a","placeholder":"​","style":"IPY_MODEL_2c723646e7714ec392f44cd4488e0aa8","value":" 1.92k/1.92k [00:00&lt;00:00, 134kB/s]"}},"74bf1476ef9a425f845e126510873dee":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e89a88e55b0f453288c7afaadd7931b2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4e375630f1e64481a64c427d9bc2a2a3":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"9aa3083157ec49d4a67c9d9b86938fe3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e09339a86f2842649f2ec4362894d5e5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9df1fa3f8bad4d9b920a59eed0bae55a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2c723646e7714ec392f44cd4488e0aa8":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"ee160cd1e1494efd9411e51bf6a32fff":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_0d2361616a8c48a8b8a7c59d5b22de6b","IPY_MODEL_e9b6c546b12c44b498f6e4e7459cd7ef","IPY_MODEL_819686354b7745ec8b032a63f338ecd6"],"layout":"IPY_MODEL_002b6d1052434bfba8b9506f486fc710"}},"0d2361616a8c48a8b8a7c59d5b22de6b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_a80003622c70429a87546d9e56a4da55","placeholder":"​","style":"IPY_MODEL_5a8c61ffe31e4f1ab1502d97a1ff8c98","value":"classifier.ckpt: 100%"}},"e9b6c546b12c44b498f6e4e7459cd7ef":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e4ff75e79cca45aeaccd299086a09a6d","max":5534328,"min":0,"orientation":"horizontal","style":"IPY_MODEL_9e2807b496d44140a0a27fb801dd83c0","value":5534328}},"819686354b7745ec8b032a63f338ecd6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_942ff14207cc4523bc85ad469319c77c","placeholder":"​","style":"IPY_MODEL_3f063103fcad4d978ba210ab24085e84","value":" 5.53M/5.53M [00:00&lt;00:00, 102MB/s]"}},"002b6d1052434bfba8b9506f486fc710":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a80003622c70429a87546d9e56a4da55":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a8c61ffe31e4f1ab1502d97a1ff8c98":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e4ff75e79cca45aeaccd299086a09a6d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9e2807b496d44140a0a27fb801dd83c0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"942ff14207cc4523bc85ad469319c77c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"3f063103fcad4d978ba210ab24085e84":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"39378a81453947b0a2f76b4494e4e6e5":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_06529198e0e74528a20419f0546a1449","IPY_MODEL_3109b7d1641f49979d9ba7b781aaecd2","IPY_MODEL_5fa350c0c5514fb08958e36fdf25c9b1"],"layout":"IPY_MODEL_93b5aa676fc84c2f946bc123e57cfa3a"}},"06529198e0e74528a20419f0546a1449":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2222e04e84b14fb9bc77d18018306d7e","placeholder":"​","style":"IPY_MODEL_664be85e6c4d4c348edafe4b26c1515e","value":"label_encoder.txt: "}},"3109b7d1641f49979d9ba7b781aaecd2":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_21859258cbf94dfba7f0f313f6bb918c","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b4ccc6cdf7fb423f9d1c83138542aa2e","value":1}},"5fa350c0c5514fb08958e36fdf25c9b1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_99d4ac49da48439aa493a131a065a8e2","placeholder":"​","style":"IPY_MODEL_50fdca7e963544649ecd816b1c266f91","value":" 129k/? [00:00&lt;00:00, 3.56MB/s]"}},"93b5aa676fc84c2f946bc123e57cfa3a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2222e04e84b14fb9bc77d18018306d7e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"664be85e6c4d4c348edafe4b26c1515e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"21859258cbf94dfba7f0f313f6bb918c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"b4ccc6cdf7fb423f9d1c83138542aa2e":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"99d4ac49da48439aa493a131a065a8e2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"50fdca7e963544649ecd816b1c266f91":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d3acbaf037bf4d23aeb1d64357290768":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f42efcccb41e43fab4427ffaa4fb4d5b","IPY_MODEL_c63f29c3b40e4ea5bdec260b3170edfa","IPY_MODEL_909c8af694b342ca83564ddd693b93f3"],"layout":"IPY_MODEL_9332a9de7cb9437f89d1ee0dc4d1e3cb"}},"f42efcccb41e43fab4427ffaa4fb4d5b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_85a00706fa8440a5947768e7da621d17","placeholder":"​","style":"IPY_MODEL_93b6709de69d4f3eb07fa47ac2185f8d","value":"hyperparams.yaml: "}},"c63f29c3b40e4ea5bdec260b3170edfa":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f4b638ce505449e8b2d4bf2e5be7c534","max":1,"min":0,"orientation":"horizontal","style":"IPY_MODEL_d6f03500e37c42a797c91431bcf81438","value":1}},"909c8af694b342ca83564ddd693b93f3":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0a87de278784496b88aa9eda8163f17b","placeholder":"​","style":"IPY_MODEL_99c2e1e8430846639e73bcf7bf7732c9","value":" 2.29k/? [00:00&lt;00:00, 104kB/s]"}},"9332a9de7cb9437f89d1ee0dc4d1e3cb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"85a00706fa8440a5947768e7da621d17":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"93b6709de69d4f3eb07fa47ac2185f8d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f4b638ce505449e8b2d4bf2e5be7c534":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":"20px"}},"d6f03500e37c42a797c91431bcf81438":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"0a87de278784496b88aa9eda8163f17b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"99c2e1e8430846639e73bcf7bf7732c9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5775c9364bd146dd8a0ef5ed9a2866c1":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_400165dc481546cb862591476a4df11d","IPY_MODEL_a69ed8c584b64208967f9c865aaaf69d","IPY_MODEL_29b80d2ec8354b39b0f04e9822217855"],"layout":"IPY_MODEL_1c9e4b82ce51439289dd9c66dbe7e439"}},"400165dc481546cb862591476a4df11d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_033bb14f7fdc4bb5a970221f4a3dbc91","placeholder":"​","style":"IPY_MODEL_8654fdbe7c60441bbd352a90c008b13f","value":"model.ckpt: 100%"}},"a69ed8c584b64208967f9c865aaaf69d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_e00dcc21f61e44aab88dcdd8a05b2985","max":452671,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b02b4dfb37dd421e9641676b454e5162","value":452671}},"29b80d2ec8354b39b0f04e9822217855":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_67ab369bb8014f2a864552a04e9d4f9a","placeholder":"​","style":"IPY_MODEL_19d22d1e501e43308c3dbf9b35135247","value":" 453k/453k [00:00&lt;00:00, 6.89MB/s]"}},"1c9e4b82ce51439289dd9c66dbe7e439":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"033bb14f7fdc4bb5a970221f4a3dbc91":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8654fdbe7c60441bbd352a90c008b13f":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"e00dcc21f61e44aab88dcdd8a05b2985":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b02b4dfb37dd421e9641676b454e5162":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"67ab369bb8014f2a864552a04e9d4f9a":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"19d22d1e501e43308c3dbf9b35135247":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d9a193281de84fe1aefeeee4ae4637ea":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_194362e0a4334eabac6aa80fd5529846","IPY_MODEL_400fc951c532401cb093f428a9919c1d","IPY_MODEL_2585eadd660b49e788a2a842945e9b02"],"layout":"IPY_MODEL_42445c75540348d38ba659b7f9602d1d"}},"194362e0a4334eabac6aa80fd5529846":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8cb7608a137843998bd1185bffb8d86e","placeholder":"​","style":"IPY_MODEL_53abf02503d64a3189a330ed13aca441","value":"mean_var_norm.ckpt: 100%"}},"400fc951c532401cb093f428a9919c1d":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_7f2cf97c6d3c401b86c75279fcd377c5","max":1063,"min":0,"orientation":"horizontal","style":"IPY_MODEL_e17d3236f1fb418b818ae2aecfecb651","value":1063}},"2585eadd660b49e788a2a842945e9b02":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_770bfb6a452c4eb2bab400bf00b1dbe6","placeholder":"​","style":"IPY_MODEL_af7d59fe9b5d41f2ae82a0e486e21de6","value":" 1.06k/1.06k [00:00&lt;00:00, 46.6kB/s]"}},"42445c75540348d38ba659b7f9602d1d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8cb7608a137843998bd1185bffb8d86e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"53abf02503d64a3189a330ed13aca441":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"7f2cf97c6d3c401b86c75279fcd377c5":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e17d3236f1fb418b818ae2aecfecb651":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"770bfb6a452c4eb2bab400bf00b1dbe6":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"af7d59fe9b5d41f2ae82a0e486e21de6":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"2D_dqnXfmKx8","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1752052073802,"user_tz":-330,"elapsed":95819,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"083f7f44-bdad-4f7a-8edf-a13d5d17b61e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting speechbrain\n","  Downloading speechbrain-1.0.3-py3-none-any.whl.metadata (24 kB)\n","Collecting hyperpyyaml (from speechbrain)\n","  Downloading HyperPyYAML-1.2.2-py3-none-any.whl.metadata (7.6 kB)\n","Requirement already satisfied: joblib in /usr/local/lib/python3.11/dist-packages (from speechbrain) (1.5.1)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from speechbrain) (2.0.2)\n","Requirement already satisfied: packaging in /usr/local/lib/python3.11/dist-packages (from speechbrain) (24.2)\n","Requirement already satisfied: scipy in /usr/local/lib/python3.11/dist-packages (from speechbrain) (1.15.3)\n","Requirement already satisfied: sentencepiece in /usr/local/lib/python3.11/dist-packages (from speechbrain) (0.2.0)\n","Requirement already satisfied: torch>=1.9 in /usr/local/lib/python3.11/dist-packages (from speechbrain) (2.6.0+cu124)\n","Requirement already satisfied: torchaudio in /usr/local/lib/python3.11/dist-packages (from speechbrain) (2.6.0+cu124)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from speechbrain) (4.67.1)\n","Requirement already satisfied: huggingface_hub in /usr/local/lib/python3.11/dist-packages (from speechbrain) (0.33.2)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (3.18.0)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (4.14.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (3.5)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (3.1.6)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (2025.3.2)\n","Collecting nvidia-cuda-nvrtc-cu12==12.4.127 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-runtime-cu12==12.4.127 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cuda-cupti-cu12==12.4.127 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cudnn-cu12==9.1.0.70 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cublas-cu12==12.4.5.8 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cufft-cu12==11.2.1.3 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-curand-cu12==10.3.5.147 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Collecting nvidia-cusolver-cu12==11.6.1.9 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Collecting nvidia-cusparse-cu12==12.3.1.170 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl.metadata (1.6 kB)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (12.4.127)\n","Collecting nvidia-nvjitlink-cu12==12.4.127 (from torch>=1.9->speechbrain)\n","  Downloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl.metadata (1.5 kB)\n","Requirement already satisfied: triton==3.2.0 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (3.2.0)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch>=1.9->speechbrain) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch>=1.9->speechbrain) (1.3.0)\n","Requirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->speechbrain) (6.0.2)\n","Requirement already satisfied: requests in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->speechbrain) (2.32.3)\n","Requirement already satisfied: hf-xet<2.0.0,>=1.1.2 in /usr/local/lib/python3.11/dist-packages (from huggingface_hub->speechbrain) (1.1.5)\n","Collecting ruamel.yaml>=0.17.28 (from hyperpyyaml->speechbrain)\n","  Downloading ruamel.yaml-0.18.14-py3-none-any.whl.metadata (24 kB)\n","Collecting ruamel.yaml.clib>=0.2.7 (from ruamel.yaml>=0.17.28->hyperpyyaml->speechbrain)\n","  Downloading ruamel.yaml.clib-0.2.12-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl.metadata (2.7 kB)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch>=1.9->speechbrain) (3.0.2)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->speechbrain) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->speechbrain) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->speechbrain) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests->huggingface_hub->speechbrain) (2025.6.15)\n","Downloading speechbrain-1.0.3-py3-none-any.whl (864 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m864.1/864.1 kB\u001b[0m \u001b[31m14.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cublas_cu12-12.4.5.8-py3-none-manylinux2014_x86_64.whl (363.4 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m363.4/363.4 MB\u001b[0m \u001b[31m4.5 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_cupti_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (13.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13.8/13.8 MB\u001b[0m \u001b[31m120.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_nvrtc_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (24.6 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m24.6/24.6 MB\u001b[0m \u001b[31m88.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cuda_runtime_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (883 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m883.7/883.7 kB\u001b[0m \u001b[31m52.9 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cudnn_cu12-9.1.0.70-py3-none-manylinux2014_x86_64.whl (664.8 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m664.8/664.8 MB\u001b[0m \u001b[31m2.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cufft_cu12-11.2.1.3-py3-none-manylinux2014_x86_64.whl (211.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m211.5/211.5 MB\u001b[0m \u001b[31m6.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_curand_cu12-10.3.5.147-py3-none-manylinux2014_x86_64.whl (56.3 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m56.3/56.3 MB\u001b[0m \u001b[31m13.0 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusolver_cu12-11.6.1.9-py3-none-manylinux2014_x86_64.whl (127.9 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m127.9/127.9 MB\u001b[0m \u001b[31m7.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_cusparse_cu12-12.3.1.170-py3-none-manylinux2014_x86_64.whl (207.5 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m207.5/207.5 MB\u001b[0m \u001b[31m5.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading nvidia_nvjitlink_cu12-12.4.127-py3-none-manylinux2014_x86_64.whl (21.1 MB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m21.1/21.1 MB\u001b[0m \u001b[31m43.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading HyperPyYAML-1.2.2-py3-none-any.whl (16 kB)\n","Downloading ruamel.yaml-0.18.14-py3-none-any.whl (118 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m118.6/118.6 kB\u001b[0m \u001b[31m9.4 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hDownloading ruamel.yaml.clib-0.2.12-cp311-cp311-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (739 kB)\n","\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m739.1/739.1 kB\u001b[0m \u001b[31m40.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hInstalling collected packages: ruamel.yaml.clib, nvidia-nvjitlink-cu12, nvidia-curand-cu12, nvidia-cufft-cu12, nvidia-cuda-runtime-cu12, nvidia-cuda-nvrtc-cu12, nvidia-cuda-cupti-cu12, nvidia-cublas-cu12, ruamel.yaml, nvidia-cusparse-cu12, nvidia-cudnn-cu12, nvidia-cusolver-cu12, hyperpyyaml, speechbrain\n","  Attempting uninstall: nvidia-nvjitlink-cu12\n","    Found existing installation: nvidia-nvjitlink-cu12 12.5.82\n","    Uninstalling nvidia-nvjitlink-cu12-12.5.82:\n","      Successfully uninstalled nvidia-nvjitlink-cu12-12.5.82\n","  Attempting uninstall: nvidia-curand-cu12\n","    Found existing installation: nvidia-curand-cu12 10.3.6.82\n","    Uninstalling nvidia-curand-cu12-10.3.6.82:\n","      Successfully uninstalled nvidia-curand-cu12-10.3.6.82\n","  Attempting uninstall: nvidia-cufft-cu12\n","    Found existing installation: nvidia-cufft-cu12 11.2.3.61\n","    Uninstalling nvidia-cufft-cu12-11.2.3.61:\n","      Successfully uninstalled nvidia-cufft-cu12-11.2.3.61\n","  Attempting uninstall: nvidia-cuda-runtime-cu12\n","    Found existing installation: nvidia-cuda-runtime-cu12 12.5.82\n","    Uninstalling nvidia-cuda-runtime-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-runtime-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-nvrtc-cu12\n","    Found existing installation: nvidia-cuda-nvrtc-cu12 12.5.82\n","    Uninstalling nvidia-cuda-nvrtc-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-nvrtc-cu12-12.5.82\n","  Attempting uninstall: nvidia-cuda-cupti-cu12\n","    Found existing installation: nvidia-cuda-cupti-cu12 12.5.82\n","    Uninstalling nvidia-cuda-cupti-cu12-12.5.82:\n","      Successfully uninstalled nvidia-cuda-cupti-cu12-12.5.82\n","  Attempting uninstall: nvidia-cublas-cu12\n","    Found existing installation: nvidia-cublas-cu12 12.5.3.2\n","    Uninstalling nvidia-cublas-cu12-12.5.3.2:\n","      Successfully uninstalled nvidia-cublas-cu12-12.5.3.2\n","  Attempting uninstall: nvidia-cusparse-cu12\n","    Found existing installation: nvidia-cusparse-cu12 12.5.1.3\n","    Uninstalling nvidia-cusparse-cu12-12.5.1.3:\n","      Successfully uninstalled nvidia-cusparse-cu12-12.5.1.3\n","  Attempting uninstall: nvidia-cudnn-cu12\n","    Found existing installation: nvidia-cudnn-cu12 9.3.0.75\n","    Uninstalling nvidia-cudnn-cu12-9.3.0.75:\n","      Successfully uninstalled nvidia-cudnn-cu12-9.3.0.75\n","  Attempting uninstall: nvidia-cusolver-cu12\n","    Found existing installation: nvidia-cusolver-cu12 11.6.3.83\n","    Uninstalling nvidia-cusolver-cu12-11.6.3.83:\n","      Successfully uninstalled nvidia-cusolver-cu12-11.6.3.83\n","Successfully installed hyperpyyaml-1.2.2 nvidia-cublas-cu12-12.4.5.8 nvidia-cuda-cupti-cu12-12.4.127 nvidia-cuda-nvrtc-cu12-12.4.127 nvidia-cuda-runtime-cu12-12.4.127 nvidia-cudnn-cu12-9.1.0.70 nvidia-cufft-cu12-11.2.1.3 nvidia-curand-cu12-10.3.5.147 nvidia-cusolver-cu12-11.6.1.9 nvidia-cusparse-cu12-12.3.1.170 nvidia-nvjitlink-cu12-12.4.127 ruamel.yaml-0.18.14 ruamel.yaml.clib-0.2.12 speechbrain-1.0.3\n"]}],"source":["!pip install --break-system-packages speechbrain"]},{"cell_type":"code","source":["!pip install --break-system-packages git+https://github.com/openai/whisper.git"],"metadata":{"id":"zcfcPU5ZmWAc","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1752052089171,"user_tz":-330,"elapsed":15350,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"a35ad220-31bb-4834-8f8f-a16c7857748e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting git+https://github.com/openai/whisper.git\n","  Cloning https://github.com/openai/whisper.git to /tmp/pip-req-build-1hs2a_ge\n","  Running command git clone --filter=blob:none --quiet https://github.com/openai/whisper.git /tmp/pip-req-build-1hs2a_ge\n","  Resolved https://github.com/openai/whisper.git to commit c0d2f624c09dc18e709e37c2ad90c039a4eb72a2\n","  Installing build dependencies ... \u001b[?25l\u001b[?25hdone\n","  Getting requirements to build wheel ... \u001b[?25l\u001b[?25hdone\n","  Preparing metadata (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: more-itertools in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (10.7.0)\n","Requirement already satisfied: numba in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (0.60.0)\n","Requirement already satisfied: numpy in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (2.0.2)\n","Requirement already satisfied: tiktoken in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (0.9.0)\n","Requirement already satisfied: torch in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (2.6.0+cu124)\n","Requirement already satisfied: tqdm in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (4.67.1)\n","Requirement already satisfied: triton>=2 in /usr/local/lib/python3.11/dist-packages (from openai-whisper==20250625) (3.2.0)\n","Requirement already satisfied: llvmlite<0.44,>=0.43.0dev0 in /usr/local/lib/python3.11/dist-packages (from numba->openai-whisper==20250625) (0.43.0)\n","Requirement already satisfied: regex>=2022.1.18 in /usr/local/lib/python3.11/dist-packages (from tiktoken->openai-whisper==20250625) (2024.11.6)\n","Requirement already satisfied: requests>=2.26.0 in /usr/local/lib/python3.11/dist-packages (from tiktoken->openai-whisper==20250625) (2.32.3)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (3.18.0)\n","Requirement already satisfied: typing-extensions>=4.10.0 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (4.14.0)\n","Requirement already satisfied: networkx in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (3.5)\n","Requirement already satisfied: jinja2 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (3.1.6)\n","Requirement already satisfied: fsspec in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (2025.3.2)\n","Requirement already satisfied: nvidia-cuda-nvrtc-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.127)\n","Requirement already satisfied: nvidia-cuda-runtime-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.127)\n","Requirement already satisfied: nvidia-cuda-cupti-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.127)\n","Requirement already satisfied: nvidia-cudnn-cu12==9.1.0.70 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (9.1.0.70)\n","Requirement already satisfied: nvidia-cublas-cu12==12.4.5.8 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.5.8)\n","Requirement already satisfied: nvidia-cufft-cu12==11.2.1.3 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (11.2.1.3)\n","Requirement already satisfied: nvidia-curand-cu12==10.3.5.147 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (10.3.5.147)\n","Requirement already satisfied: nvidia-cusolver-cu12==11.6.1.9 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (11.6.1.9)\n","Requirement already satisfied: nvidia-cusparse-cu12==12.3.1.170 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.3.1.170)\n","Requirement already satisfied: nvidia-cusparselt-cu12==0.6.2 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (0.6.2)\n","Requirement already satisfied: nvidia-nccl-cu12==2.21.5 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (2.21.5)\n","Requirement already satisfied: nvidia-nvtx-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.127)\n","Requirement already satisfied: nvidia-nvjitlink-cu12==12.4.127 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (12.4.127)\n","Requirement already satisfied: sympy==1.13.1 in /usr/local/lib/python3.11/dist-packages (from torch->openai-whisper==20250625) (1.13.1)\n","Requirement already satisfied: mpmath<1.4,>=1.1.0 in /usr/local/lib/python3.11/dist-packages (from sympy==1.13.1->torch->openai-whisper==20250625) (1.3.0)\n","Requirement already satisfied: charset-normalizer<4,>=2 in /usr/local/lib/python3.11/dist-packages (from requests>=2.26.0->tiktoken->openai-whisper==20250625) (3.4.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.11/dist-packages (from requests>=2.26.0->tiktoken->openai-whisper==20250625) (3.10)\n","Requirement already satisfied: urllib3<3,>=1.21.1 in /usr/local/lib/python3.11/dist-packages (from requests>=2.26.0->tiktoken->openai-whisper==20250625) (2.4.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.11/dist-packages (from requests>=2.26.0->tiktoken->openai-whisper==20250625) (2025.6.15)\n","Requirement already satisfied: MarkupSafe>=2.0 in /usr/local/lib/python3.11/dist-packages (from jinja2->torch->openai-whisper==20250625) (3.0.2)\n","Building wheels for collected packages: openai-whisper\n","  Building wheel for openai-whisper (pyproject.toml) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for openai-whisper: filename=openai_whisper-20250625-py3-none-any.whl size=803979 sha256=14f294073f0eb707006b707c3076a14c9fc7c64b478e8d310af95c65ceedacbc\n","  Stored in directory: /tmp/pip-ephem-wheel-cache-nqdksm9r/wheels/1f/1d/98/9583695e6695a6ac0ad42d87511097dce5ba486647dbfecb0e\n","Successfully built openai-whisper\n","Installing collected packages: openai-whisper\n","Successfully installed openai-whisper-20250625\n"]}]},{"cell_type":"code","source":["!pip install --break-system-packages pydub # Install if you plan to use pydub for other audio tasks"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uKrQorK05Bzk","executionInfo":{"status":"ok","timestamp":1752052095891,"user_tz":-330,"elapsed":6715,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"234062ef-94b9-41d4-8859-c7882787eb05"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: pydub in /usr/local/lib/python3.11/dist-packages (0.25.1)\n"]}]},{"cell_type":"code","source":["# --- Step 1: Import Necessary Modules ---\n","# Import all the libraries we will need for audio processing, model inference, and data manipulation.\n","import torch\n","import torchaudio\n","import whisper\n","from speechbrain.inference.speaker import SpeakerRecognition # For speaker embedding extraction\n","from speechbrain.inference.VAD import VAD # For Voice Activity Detection\n","import numpy as np # For numerical operations, especially with embeddings\n","import os # For interacting with the operating system (e.g., running ffmpeg commands)\n","import datetime # For formatting timestamps in the output\n","from sklearn.cluster import AgglomerativeClustering # For grouping speakers based on embeddings"],"metadata":{"id":"R9f16NJ5mi1b","colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"executionInfo":{"status":"ok","timestamp":1752052107935,"user_tz":-330,"elapsed":12041,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"19fed04c-274e-4cf7-86d9-0fa509120ef7"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.checkpoints:Registered checkpoint save hook for _speechbrain_save\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint load hook for _speechbrain_load\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint save hook for save\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint load hook for load\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint save hook for _save\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint load hook for _recover\n"]}]},{"cell_type":"code","source":["input_audio_path = \"/content/test.wav\" # Replace with the path to your input audio file\n","cleaned_audio_path = \"/content/clean_audio.wav\" # Output path for the cleaned audio"],"metadata":{"id":"1gtoo94_mjo6","executionInfo":{"status":"ok","timestamp":1752052107963,"user_tz":-330,"elapsed":14,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["print(\"--- Audio Preprocessing ---\")\n","print(\"Starting audio cleaning and normalization with ffmpeg...\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Xro4wzXV5LQ5","executionInfo":{"status":"ok","timestamp":1752052107966,"user_tz":-330,"elapsed":12,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"20c691ba-5646-4672-efa0-c7c27fc3c938"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["--- Audio Preprocessing ---\n","Starting audio cleaning and normalization with ffmpeg...\n"]}]},{"cell_type":"code","source":["os.system(f\"ffmpeg -i \\\"{input_audio_path}\\\" -acodec pcm_s16le -ac 1 -ar 16000 -af \\\"loudnorm,highpass=f=200,lowpass=f=3000\\\" {cleaned_audio_path} -y\")\n","print(f\"Audio cleaned and saved to {cleaned_audio_path}\")"],"metadata":{"id":"BZtL0e2jmoIC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1752052117265,"user_tz":-330,"elapsed":3141,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"944d1756-f7cf-4a77-ec5f-7402e9709cfc"},"execution_count":7,"outputs":[{"output_type":"stream","name":"stdout","text":["Audio cleaned and saved to /content/clean_audio.wav\n"]}]},{"cell_type":"code","source":["print(\"\\n--- SpeechBrain Model Loading ---\")\n","try:\n","    embedding_model = SpeakerRecognition.from_hparams(\n","        source=\"speechbrain/spkrec-ecapa-voxceleb\",\n","        savedir=\"pretrained_models/spkrec-ecapa-voxceleb\",\n","        run_opts={\"device\":\"cuda\" if torch.cuda.is_available() else \"cpu\"}\n","    )\n","    print(\"Speaker embedding model loaded successfully.\")\n","except Exception as e:\n","    print(f\"Error loading SpeechBrain embedding model: {e}\")\n","    print(\"Please ensure you have accepted the user conditions for 'speechbrain/spkrec-ecapa-voxceleb' on Hugging Face Model Hub and potentially logged in via `huggingface-cli login` if running locally, or provided an access token.\")\n","    exit() # Exit if models can't be loaded, as further steps will fail.\n","\n","try:\n","    vad_model = VAD.from_hparams(\n","        source=\"speechbrain/vad-crdnn-libriparty\",\n","        savedir=\"pretrained_models/vad-crdnn-libriparty\",\n","        run_opts={\"device\":\"cuda\" if torch.cuda.is_available() else \"cpu\"}\n","    )\n","    print(\"VAD model loaded successfully.\")\n","except Exception as e:\n","    print(f\"Error loading SpeechBrain VAD model: {e}\")\n","    print(\"Please ensure you have accepted the user conditions for 'speechbrain/vad-crdnn-libriparty' on Hugging Face Model Hub.\")\n","    exit() # Exit if models can't be loaded."],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000,"referenced_widgets":["c36fa130e60744e38dfb9ebd7173e537","6ae690939dcd4a18a15114e4217462e6","be11146d3826428db60926820e2364a4","fb6b1f4ea0bf422da1b81a367d02f4fc","30ee24827b2143b5a601c13a49d7a8c3","63a165bc82ba432bbaaf8595e28164b0","94defcfaa534492092795083a8509968","822ce724da28434a86679eb9bdbd9b30","23a499c7ec604ca0b673c431b626b9d4","8490862845524a5eb989a4612a88fc98","1a0a362c49664e77a5aeeefd4ec46ea1","fdeebc93610e44bbb5bd6195d6b5745e","9f1bec3548b24142847365ed70b8638a","49b1dc36f13b4ca7bcc7947dd55d12d8","413668189622415ab22909034c514577","ac3c0b4a1f6c43b69c0109e32ab8ff57","6c3749d5397b4ad992dff3446c6b3590","c95429552c694758994b5125d4d5ef72","59ce8bee85c64b77a210dce94893e2da","ad3252b1cdd244b49c9303dd979d1a0e","e56afa4641b4433e96d740d053743ac2","cc4db9a8813a4f71aad482f404763d86","99e2860d38464ef0bff93faf84529ef2","042f42d0179c4e3492c5dbf988454376","2e6ffa21fc14419dbdfa2354f3e364d3","d2f439cef92e4eccbc038fe848fafc2a","74bf1476ef9a425f845e126510873dee","e89a88e55b0f453288c7afaadd7931b2","4e375630f1e64481a64c427d9bc2a2a3","9aa3083157ec49d4a67c9d9b86938fe3","e09339a86f2842649f2ec4362894d5e5","9df1fa3f8bad4d9b920a59eed0bae55a","2c723646e7714ec392f44cd4488e0aa8","ee160cd1e1494efd9411e51bf6a32fff","0d2361616a8c48a8b8a7c59d5b22de6b","e9b6c546b12c44b498f6e4e7459cd7ef","819686354b7745ec8b032a63f338ecd6","002b6d1052434bfba8b9506f486fc710","a80003622c70429a87546d9e56a4da55","5a8c61ffe31e4f1ab1502d97a1ff8c98","e4ff75e79cca45aeaccd299086a09a6d","9e2807b496d44140a0a27fb801dd83c0","942ff14207cc4523bc85ad469319c77c","3f063103fcad4d978ba210ab24085e84","39378a81453947b0a2f76b4494e4e6e5","06529198e0e74528a20419f0546a1449","3109b7d1641f49979d9ba7b781aaecd2","5fa350c0c5514fb08958e36fdf25c9b1","93b5aa676fc84c2f946bc123e57cfa3a","2222e04e84b14fb9bc77d18018306d7e","664be85e6c4d4c348edafe4b26c1515e","21859258cbf94dfba7f0f313f6bb918c","b4ccc6cdf7fb423f9d1c83138542aa2e","99d4ac49da48439aa493a131a065a8e2","50fdca7e963544649ecd816b1c266f91","d3acbaf037bf4d23aeb1d64357290768","f42efcccb41e43fab4427ffaa4fb4d5b","c63f29c3b40e4ea5bdec260b3170edfa","909c8af694b342ca83564ddd693b93f3","9332a9de7cb9437f89d1ee0dc4d1e3cb","85a00706fa8440a5947768e7da621d17","93b6709de69d4f3eb07fa47ac2185f8d","f4b638ce505449e8b2d4bf2e5be7c534","d6f03500e37c42a797c91431bcf81438","0a87de278784496b88aa9eda8163f17b","99c2e1e8430846639e73bcf7bf7732c9","5775c9364bd146dd8a0ef5ed9a2866c1","400165dc481546cb862591476a4df11d","a69ed8c584b64208967f9c865aaaf69d","29b80d2ec8354b39b0f04e9822217855","1c9e4b82ce51439289dd9c66dbe7e439","033bb14f7fdc4bb5a970221f4a3dbc91","8654fdbe7c60441bbd352a90c008b13f","e00dcc21f61e44aab88dcdd8a05b2985","b02b4dfb37dd421e9641676b454e5162","67ab369bb8014f2a864552a04e9d4f9a","19d22d1e501e43308c3dbf9b35135247","d9a193281de84fe1aefeeee4ae4637ea","194362e0a4334eabac6aa80fd5529846","400fc951c532401cb093f428a9919c1d","2585eadd660b49e788a2a842945e9b02","42445c75540348d38ba659b7f9602d1d","8cb7608a137843998bd1185bffb8d86e","53abf02503d64a3189a330ed13aca441","7f2cf97c6d3c401b86c75279fcd377c5","e17d3236f1fb418b818ae2aecfecb651","770bfb6a452c4eb2bab400bf00b1dbe6","af7d59fe9b5d41f2ae82a0e486e21de6"]},"collapsed":true,"id":"A21MBpRCopqg","executionInfo":{"status":"ok","timestamp":1752052125191,"user_tz":-330,"elapsed":4933,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"59d3fcb7-cdd4-4941-f2d7-8a50b8e66f14"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["INFO:speechbrain.utils.fetching:Fetch hyperparams.yaml: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n"]},{"output_type":"stream","name":"stdout","text":["\n","--- SpeechBrain Model Loading ---\n"]},{"output_type":"display_data","data":{"text/plain":["hyperparams.yaml: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"c36fa130e60744e38dfb9ebd7173e537"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/0f99f2d0ebe89ac095bcc5903c4dd8f72b367286/hyperparams.yaml' -> '/content/pretrained_models/spkrec-ecapa-voxceleb/hyperparams.yaml'\n","INFO:speechbrain.utils.fetching:Fetch custom.py: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint save hook for _save\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint load hook for _load\n","DEBUG:speechbrain.utils.checkpoints:Registered parameter transfer hook for _load\n","/usr/local/lib/python3.11/dist-packages/speechbrain/utils/autocast.py:188: FutureWarning: `torch.cuda.amp.custom_fwd(args...)` is deprecated. Please use `torch.amp.custom_fwd(args..., device_type='cuda')` instead.\n","  wrapped_fwd = torch.cuda.amp.custom_fwd(fwd, cast_inputs=cast_inputs)\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint save hook for save\n","DEBUG:speechbrain.utils.checkpoints:Registered checkpoint load hook for load_if_possible\n","DEBUG:speechbrain.utils.parameter_transfer:Collecting files (or symlinks) for pretraining in pretrained_models/spkrec-ecapa-voxceleb.\n","INFO:speechbrain.utils.fetching:Fetch embedding_model.ckpt: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["embedding_model.ckpt:   0%|          | 0.00/83.3M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"fdeebc93610e44bbb5bd6195d6b5745e"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/0f99f2d0ebe89ac095bcc5903c4dd8f72b367286/embedding_model.ckpt' -> '/content/pretrained_models/spkrec-ecapa-voxceleb/embedding_model.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"embedding_model\"] = /content/pretrained_models/spkrec-ecapa-voxceleb/embedding_model.ckpt\n","INFO:speechbrain.utils.fetching:Fetch mean_var_norm_emb.ckpt: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["mean_var_norm_emb.ckpt:   0%|          | 0.00/1.92k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"99e2860d38464ef0bff93faf84529ef2"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/0f99f2d0ebe89ac095bcc5903c4dd8f72b367286/mean_var_norm_emb.ckpt' -> '/content/pretrained_models/spkrec-ecapa-voxceleb/mean_var_norm_emb.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"mean_var_norm_emb\"] = /content/pretrained_models/spkrec-ecapa-voxceleb/mean_var_norm_emb.ckpt\n","INFO:speechbrain.utils.fetching:Fetch classifier.ckpt: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["classifier.ckpt:   0%|          | 0.00/5.53M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"ee160cd1e1494efd9411e51bf6a32fff"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/0f99f2d0ebe89ac095bcc5903c4dd8f72b367286/classifier.ckpt' -> '/content/pretrained_models/spkrec-ecapa-voxceleb/classifier.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"classifier\"] = /content/pretrained_models/spkrec-ecapa-voxceleb/classifier.ckpt\n","INFO:speechbrain.utils.fetching:Fetch label_encoder.txt: Fetching from HuggingFace Hub 'speechbrain/spkrec-ecapa-voxceleb' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["label_encoder.txt: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"39378a81453947b0a2f76b4494e4e6e5"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--spkrec-ecapa-voxceleb/snapshots/0f99f2d0ebe89ac095bcc5903c4dd8f72b367286/label_encoder.txt' -> '/content/pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"label_encoder\"] = /content/pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt\n","INFO:speechbrain.utils.parameter_transfer:Loading pretrained files for: embedding_model, mean_var_norm_emb, classifier, label_encoder\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): embedding_model -> /content/pretrained_models/spkrec-ecapa-voxceleb/embedding_model.ckpt\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): mean_var_norm_emb -> /content/pretrained_models/spkrec-ecapa-voxceleb/mean_var_norm_emb.ckpt\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): classifier -> /content/pretrained_models/spkrec-ecapa-voxceleb/classifier.ckpt\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): label_encoder -> /content/pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt\n","DEBUG:speechbrain.dataio.encoder:Loaded categorical encoding from /content/pretrained_models/spkrec-ecapa-voxceleb/label_encoder.ckpt\n","INFO:speechbrain.utils.fetching:Fetch hyperparams.yaml: Fetching from HuggingFace Hub 'speechbrain/vad-crdnn-libriparty' if not cached\n"]},{"output_type":"stream","name":"stdout","text":["Speaker embedding model loaded successfully.\n"]},{"output_type":"display_data","data":{"text/plain":["hyperparams.yaml: 0.00B [00:00, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d3acbaf037bf4d23aeb1d64357290768"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/hyperparams.yaml' -> '/content/pretrained_models/vad-crdnn-libriparty/hyperparams.yaml'\n","INFO:speechbrain.utils.fetching:Fetch custom.py: Fetching from HuggingFace Hub 'speechbrain/vad-crdnn-libriparty' if not cached\n","DEBUG:speechbrain.utils.parameter_transfer:Collecting files (or symlinks) for pretraining in pretrained_models/vad-crdnn-libriparty.\n","INFO:speechbrain.utils.fetching:Fetch model.ckpt: Fetching from HuggingFace Hub 'speechbrain/vad-crdnn-libriparty' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["model.ckpt:   0%|          | 0.00/453k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5775c9364bd146dd8a0ef5ed9a2866c1"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/model.ckpt' -> '/content/pretrained_models/vad-crdnn-libriparty/model.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"model\"] = /content/pretrained_models/vad-crdnn-libriparty/model.ckpt\n","INFO:speechbrain.utils.fetching:Fetch mean_var_norm.ckpt: Fetching from HuggingFace Hub 'speechbrain/vad-crdnn-libriparty' if not cached\n"]},{"output_type":"display_data","data":{"text/plain":["mean_var_norm.ckpt:   0%|          | 0.00/1.06k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d9a193281de84fe1aefeeee4ae4637ea"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["DEBUG:speechbrain.utils.fetching:Fetch: Local file found, creating symlink '/root/.cache/huggingface/hub/models--speechbrain--vad-crdnn-libriparty/snapshots/c5d5ae4fce161d94c3ab0286e32fb4a041a21a04/mean_var_norm.ckpt' -> '/content/pretrained_models/vad-crdnn-libriparty/mean_var_norm.ckpt'\n","DEBUG:speechbrain.utils.parameter_transfer:Set local path in self.paths[\"mean_var_norm\"] = /content/pretrained_models/vad-crdnn-libriparty/mean_var_norm.ckpt\n","INFO:speechbrain.utils.parameter_transfer:Loading pretrained files for: model, mean_var_norm\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): model -> /content/pretrained_models/vad-crdnn-libriparty/model.ckpt\n","DEBUG:speechbrain.utils.parameter_transfer:Redirecting (loading from local path): mean_var_norm -> /content/pretrained_models/vad-crdnn-libriparty/mean_var_norm.ckpt\n"]},{"output_type":"stream","name":"stdout","text":["VAD model loaded successfully.\n"]}]},{"cell_type":"code","source":["print(\"\\n--- Audio Loading for SpeechBrain ---\")\n","try:\n","    signal, sr = torchaudio.load(cleaned_audio_path)\n","\n","    # Convert to mono if the audio is stereo (channel dimension is usually 0)\n","    if signal.ndim > 1 and signal.shape[0] > 1:\n","        print(\"Converting stereo audio to mono...\")\n","        signal = torch.mean(signal, dim=0, keepdim=True)\n","\n","    # Resample audio to 16kHz if necessary, as SpeechBrain models are trained on this rate\n","    if sr != 16000:\n","        print(f\"Resampling audio from {sr} Hz to 16000 Hz...\")\n","        resampler = torchaudio.transforms.Resample(orig_freq=sr, new_freq=16000)\n","        signal = resampler(signal)\n","        sr = 16000\n","\n","    # Ensure the signal has a batch dimension (e.g., (1, samples) instead of (samples,))\n","    if signal.ndim == 1:\n","        signal = signal.unsqueeze(0) # Add batch dimension: (samples,) -> (1, samples)\n","\n","    # Move the audio tensor to the same device as the VAD model (GPU if available)\n","    signal = signal.to(vad_model.device)\n","\n","    print(f\"DEBUG: Final signal shape before VAD: {signal.shape}\")\n","    print(f\"DEBUG: Final signal dtype before VAD: {signal.dtype}\")\n","    print(f\"DEBUG: Final signal device before VAD: {signal.device}\")\n","    print(f\"DEBUG: VAD model device: {vad_model.device}\")\n","\n","except Exception as e:\n","    print(f\"Error loading or processing audio with torchaudio: {e}\")\n","    exit() # Stop execution if audio cannot be prepared."],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"nprAJ6-To0C2","executionInfo":{"status":"ok","timestamp":1752052127667,"user_tz":-330,"elapsed":55,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"b8dd2b70-63f1-4460-e293-0c7b19653b47"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Audio Loading for SpeechBrain ---\n","DEBUG: Final signal shape before VAD: torch.Size([1, 1769280])\n","DEBUG: Final signal dtype before VAD: torch.float32\n","DEBUG: Final signal device before VAD: cpu\n","DEBUG: VAD model device: cpu\n"]}]},{"cell_type":"code","source":["# --- Step 5: Perform Voice Activity Detection (VAD) ---\n","# Use the VAD model to detect segments of speech in the audio.\n","# We will get raw VAD scores and then manually apply a threshold to extract segments.\n","print(\"\\n--- Voice Activity Detection ---\")\n","try:\n","    # Get VAD scores (probabilities of speech per frame) by calling the model directly\n","    # The vad_model expects (batch_size, samples) and returns (batch_size, num_frames)\n","    with torch.no_grad():\n","        vad_scores = vad_model(signal, wav_lens=torch.tensor([1.0], device=vad_model.device))\n","\n","    # Assuming batch_size=1, get the scores for the first (and only) item\n","    vad_scores = vad_scores.squeeze(0).cpu().numpy()\n","\n","    # Determine frame length and hop length for converting frame indices to time\n","    # SpeechBrain's VAD often uses 16ms frames with 10ms hop\n","    frame_len_ms = 16\n","    hop_len_ms = 10\n","    sample_rate_vad = 16000 # VAD model expects 16kHz audio\n","\n","    # Convert scores to binary (speech/non-speech) based on a threshold\n","    # You can tune this threshold (e.g., 0.5 is common, but try 0.3 or 0.2 if no speech is detected)\n","    vad_threshold = 0.5\n","    speech_frames = vad_scores > vad_threshold\n","\n","    speech_segments = []\n","    in_speech = False\n","    segment_start_frame = -1\n","\n","    for i, is_speech in enumerate(speech_frames):\n","        if is_speech and not in_speech:\n","            segment_start_frame = i\n","            in_speech = True\n","        elif not is_speech and in_speech:\n","            segment_end_frame = i - 1 # End of current speech segment\n","            # Convert frame indices to time in seconds\n","            start_time = (segment_start_frame * hop_len_ms) / 1000.0\n","            end_time = (segment_end_frame * hop_len_ms + frame_len_ms) / 1000.0 # Add frame_len_ms to last frame end\n","            speech_segments.append((start_time, end_time))\n","            in_speech = False\n","\n","    # Add the last segment if audio ends while still in speech\n","    if in_speech:\n","        start_time = (segment_start_frame * hop_len_ms) / 1000.0\n","        # End time is simply the duration of the audio for the last segment\n","        end_time = signal.shape[1] / sample_rate_vad\n","        speech_segments.append((start_time, end_time))\n","\n","    print(f\"Detected {len(speech_segments)} speech segments after VAD.\")\n","\n","    # --- Debugging VAD output ---\n","    if len(speech_segments) == 0:\n","        print(\"DEBUG: VAD detected NO speech segments. Consider lowering 'vad_threshold' or checking audio quality.\")\n","        print(f\"DEBUG: Max VAD score: {np.max(vad_scores):.4f}, Min VAD score: {np.min(vad_scores):.4f}\")\n","        print(f\"DEBUG: First 20 VAD scores: {vad_scores[:20]}\")\n","        print(f\"DEBUG: Last 20 VAD scores: {vad_scores[-20:]}\")\n","    # --- End Debugging VAD output ---\n","\n","except Exception as e:\n","    print(f\"Error during Voice Activity Detection: {e}\")\n","    print(\"This might be due to an issue with the VAD model or the input signal.\")\n","    speech_segments = [] # Ensure speech_segments is an empty list if VAD fails"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"r6DsNFaIo205","executionInfo":{"status":"ok","timestamp":1752052144440,"user_tz":-330,"elapsed":1803,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"ca228c05-76dc-4f85-f7d7-d0c01fdc1e18"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Voice Activity Detection ---\n","Detected 38 speech segments after VAD.\n"]}]},{"cell_type":"code","source":["print(\"\\n--- Speaker Embedding Extraction and Clustering ---\")\n","\n","speaker_segments_diarized = [] # Stores final diarized segments (start, end, speaker_id)\n","embeddings = [] # Stores speaker embeddings for each segment\n","segment_info = [] # Stores original segment (start_sec, end_sec) for mapping back after clustering\n","\n","if not speech_segments:\n","    print(\"No speech segments detected by VAD. Skipping speaker diarization.\")\n","else:\n","    print(f\"Extracting embeddings for {len(speech_segments)} speech segments...\")\n","    sample_rate_vad = 16000 # Use the consistent sample rate from VAD\n","\n","    for start_sec, end_sec in speech_segments:\n","        # Ensure segment is not empty or too short for a meaningful embedding\n","        if end_sec - start_sec > 0.2: # Minimum duration (e.g., 0.2 seconds) for a valid embedding\n","            # Extract the audio clip for the current segment\n","            clip_start_sample = int(start_sec * sample_rate_vad)\n","            clip_end_sample = int(end_sec * sample_rate_vad)\n","            clip = signal[:, clip_start_sample : clip_end_sample].to(embedding_model.device)\n","\n","            if clip.shape[1] > 0: # Ensure the clip is not empty after slicing\n","                with torch.no_grad(): # Embeddings should be extracted without gradient calculation\n","                    emb = embedding_model.encode_batch(clip).flatten().cpu().numpy()\n","                embeddings.append(emb)\n","                segment_info.append((start_sec, end_sec))\n","            else:\n","                print(f\"Warning: Skipping empty clip from {start_sec:.2f}s to {end_sec:.2f}s for embedding.\")\n","\n","    if len(embeddings) == 0:\n","        print(\"No valid speech segments found for embedding extraction. Diarization cannot proceed.\")\n","    else:\n","        embeddings = np.array(embeddings)\n","        print(f\"Extracted {len(embeddings)} embeddings. Performing clustering...\")\n","\n","        # Find this line and modify it:\n","        # n_speakers_estimate = min(len(embeddings), 8) # <-- This line needs to be changed\n","        n_speakers_estimate = 2 # Set this to the known number of speakers (Agent + User)\n","\n","        if n_speakers_estimate < 1:\n","            print(\"Not enough embeddings to perform clustering (less than 1).\")\n","        else:\n","            # Modify this line to use the fixed n_speakers_estimate:\n","            clustering = AgglomerativeClustering(n_clusters=n_speakers_estimate, linkage='average').fit(embeddings)\n","            labels = clustering.labels_\n","\n","            # --- ADD THESE LINES ---\n","            print(f\"DEBUG: Clustering labels generated: {labels}\")\n","            print(f\"DEBUG: Unique labels found: {np.unique(labels)}\")\n","            # --- END OF ADDED LINES ---\n","\n","            # Map clustered labels back to original segments\n","            current_speaker_segments = {}\n","            for i, (start_sec, end_sec) in enumerate(segment_info):\n","                speaker_id = f\"SPEAKER_{labels[i]:02d}\" # Create speaker IDs like SPEAKER_00, SPEAKER_01\n","                if speaker_id not in current_speaker_segments:\n","                    current_speaker_segments[speaker_id] = []\n","                current_speaker_segments[speaker_id].append((start_sec, end_sec))\n","\n","            # Merge adjacent segments for the same speaker to form longer turns\n","            for speaker_id, segments in current_speaker_segments.items():\n","                segments.sort() # Sort segments by start time\n","                if not segments:\n","                    continue\n","\n","                merged_segments = [list(segments[0])] # Initialize with the first segment\n","                for i in range(1, len(segments)):\n","                    # Merge if the gap between segments is small (e.g., less than 0.5 seconds)\n","                    if segments[i][0] - merged_segments[-1][1] < 0.5:\n","                        merged_segments[-1][1] = max(merged_segments[-1][1], segments[i][1]) # Extend end time\n","                    else:\n","                        merged_segments.append(list(segments[i])) # Start a new merged segment\n","\n","                for seg_start, seg_end in merged_segments:\n","                    speaker_segments_diarized.append((seg_start, seg_end, speaker_id))\n","\n","            speaker_segments_diarized.sort() # Sort the final diarized segments by time\n","            print(\"Speaker Diarization complete.\")\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"collapsed":true,"id":"anj8n5Uyo4gs","executionInfo":{"status":"ok","timestamp":1752052162334,"user_tz":-330,"elapsed":4972,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"c92834d0-81f0-4676-85a7-f4232dcb1a6b"},"execution_count":11,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Speaker Embedding Extraction and Clustering ---\n","Extracting embeddings for 38 speech segments...\n","Extracted 17 embeddings. Performing clustering...\n","DEBUG: Clustering labels generated: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1]\n","DEBUG: Unique labels found: [0 1]\n","Speaker Diarization complete.\n"]}]},{"cell_type":"code","source":["print(\"\\n--- Whisper Transcription ---\")\n","try:\n","    model = whisper.load_model(\"large\") # You can choose \"base\", \"small\", \"medium\", \"large\"\n","    result = model.transcribe(cleaned_audio_path, task=\"translate\", verbose=False, word_timestamps=True)\n","    print(\"Whisper Transcription complete.\")\n","except FileNotFoundError:\n","    print(f\"Error: Cleaned audio file not found at {cleaned_audio_path}. Please check `ffmpeg` output.\")\n","    exit()\n","except Exception as e:\n","    print(f\"Error during Whisper transcription: {e}\")\n","    exit()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-x-GFdZJ2Xk5","outputId":"d726c432-252a-4a34-d4c0-f566c07e3c15","executionInfo":{"status":"ok","timestamp":1752053082931,"user_tz":-330,"elapsed":890852,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}}},"execution_count":12,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Whisper Transcription ---\n"]},{"output_type":"stream","name":"stderr","text":["100%|█████████████████████████████████████| 2.88G/2.88G [00:34<00:00, 88.8MiB/s]\n","/usr/local/lib/python3.11/dist-packages/whisper/transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\n","  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")\n","/usr/local/lib/python3.11/dist-packages/whisper/transcribe.py:182: UserWarning: Word-level timestamps on translations may not be reliable.\n","  warnings.warn(\"Word-level timestamps on translations may not be reliable.\")\n"]},{"output_type":"stream","name":"stdout","text":["Detected language: Telugu\n"]},{"output_type":"stream","name":"stderr","text":["100%|██████████| 11058/11058 [13:22<00:00, 13.78frames/s]"]},{"output_type":"stream","name":"stdout","text":["Whisper Transcription complete.\n"]},{"output_type":"stream","name":"stderr","text":["\n"]}]},{"cell_type":"code","source":["print(\"\\n--- Aligning Transcription with Speaker Diarization ---\")\n","\n","final_transcription = []\n","\n","if not speaker_segments_diarized:\n","    print(\"Warning: No speaker segments were detected. Transcription will not be diarized by speaker.\")\n","    # Fallback: if no speakers are detected, just output the transcription with UNKNOWN speaker\n","    for segment in result[\"segments\"]:\n","        segment_start = segment[\"start\"]\n","        segment_end = segment[\"end\"]\n","        text = segment[\"text\"].strip()\n","        start_time_str = str(datetime.timedelta(seconds=int(segment_start)))\n","        end_time_str = str(datetime.timedelta(seconds=int(segment_end)))\n","        final_transcription.append(f\"[UNKNOWN {start_time_str}-{end_time_str}]: {text}\")\n","else:\n","    for segment in result[\"segments\"]:\n","        segment_start = segment[\"start\"]\n","        segment_end = segment[\"end\"]\n","        text = segment[\"text\"].strip()\n","\n","        assigned_speaker = \"UNKNOWN\"\n","        max_overlap = 0 # To find the speaker segment with the most overlap\n","\n","        # Iterate through diarized speaker segments to find the best match for the current Whisper segment\n","        for spk_start, spk_end, speaker_id in speaker_segments_diarized:\n","            overlap_start = max(segment_start, spk_start)\n","            overlap_end = min(segment_end, spk_end)\n","            overlap_duration = max(0, overlap_end - overlap_start) # Calculate overlap duration\n","\n","            # If there's a significant overlap and it's the largest found so far, assign this speaker\n","            if overlap_duration > 0.05 and overlap_duration > max_overlap: # 0.05s minimum overlap\n","                max_overlap = overlap_duration\n","                assigned_speaker = speaker_id\n","\n","        # Format timestamps for readability\n","        start_time_str = str(datetime.timedelta(seconds=int(segment_start)))\n","        end_time_str = str(datetime.timedelta(seconds=int(segment_end)))\n","\n","        final_transcription.append(f\"[{assigned_speaker} {start_time_str}-{end_time_str}]: {text}\")\n"],"metadata":{"id":"7_gRKxzs2XnP","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1752053092236,"user_tz":-330,"elapsed":55,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"18b9b370-13a9-486d-c2d1-4f0b73b97dbd"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Aligning Transcription with Speaker Diarization ---\n"]}]},{"cell_type":"code","source":["print(\"\\n--- Final Diarized and Translated Transcription ---\")\n","for line in final_transcription:\n","    print(line)\n","\n","output_file_path = \"diarized_translation.txt\"\n","with open(output_file_path, \"w\", encoding=\"utf-8\") as f:\n","    for line in final_transcription:\n","        f.write(line + \"\\n\")\n","print(f\"\\nTranscription saved to {output_file_path}\")\n","\n","print(\"\\n--- Processing Complete ---\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yriYZkCh5uzb","executionInfo":{"status":"ok","timestamp":1752053094656,"user_tz":-330,"elapsed":7,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"fca90b3f-9a5c-4ea2-b7b5-24fa22bae960"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["\n","--- Final Diarized and Translated Transcription ---\n","[SPEAKER_00 0:00:00-0:00:01]: tone\n","[SPEAKER_00 0:00:01-0:00:01]: tone\n","[SPEAKER_00 0:00:03-0:00:04]: tone\n","[SPEAKER_00 0:00:07-0:00:07]: fun\n","[SPEAKER_00 0:00:11-0:00:11]: Hello\n","[SPEAKER_00 0:00:12-0:00:13]: hello\n","[SPEAKER_00 0:00:15-0:00:16]: Annamaste brother, I am Mr. Gok offense\n","[SPEAKER_00 0:00:16-0:00:17]: how much tomorrow\n","[SPEAKER_00 0:00:17-0:00:18]: What is your name?\n","[SPEAKER_00 0:00:19-0:00:20]: My name is Nandini\n","[SPEAKER_00 0:00:20-0:00:22]: I amballing mhc license\n","[UNKNOWN 0:00:22-0:00:22]: 9\n","[UNKNOWN 0:00:22-0:00:25]: Can i talk with you for two minutes?\n","[UNKNOWN 0:00:25-0:00:26]: No, It's Okay\n","[SPEAKER_00 0:00:27-0:00:27]: It's okay\n","[SPEAKER_00 0:00:27-0:00:31]: The quality of the columns is not good for the training. The columns are not good for the children.\n","[SPEAKER_00 0:00:32-0:00:38]: The name of the policy is Life Super Income Plan. The number of the policy is 9750921.\n","[SPEAKER_00 0:00:39-0:00:42]: You can give the number of the policy to the applicant. If you have taken the policy once for the semester,\n","[SPEAKER_00 0:00:44-0:00:46]: you have to pay the entire policy for the 16th semester.\n","[UNKNOWN 0:00:48-0:00:52]: After you pay the 8th semester, you will get the policy for the 8th semester.\n","[UNKNOWN 0:00:52-0:00:53]: You will get the policy for the 12th semester.\n","[SPEAKER_00 0:00:55-0:00:59]: You have paid the policy for the 4th semester of the year.\n","[SPEAKER_00 0:01:00-0:01:02]: Your IDO DURATE is settled from 3rd November, 2012.\n","[SPEAKER_00 0:01:05-0:01:09]: You said that you will be doing the online payment for the renewal.\n","[SPEAKER_00 0:01:09-0:01:12]: Will you pay the payment time or will you send the link?\n","[SPEAKER_00 0:01:15-0:01:17]: I will send the link.\n","[SPEAKER_00 0:01:17-0:01:19]: I will send the payment link from the line.\n","[UNKNOWN 0:01:21-0:01:22]: Okay.\n","[SPEAKER_00 0:01:22-0:01:26]: Please tell me the transaction ID. I will update it here.\n","[SPEAKER_00 0:01:26-0:01:29]: I will see. I have sent the link. I have sent it in the middle.\n","[SPEAKER_00 0:01:30-0:01:35]: Okay. I will call you again. I will get the transaction details.\n","[SPEAKER_00 0:01:35-0:01:36]: Can I call you at around 2 o'clock?\n","[SPEAKER_00 0:01:38-0:01:41]: Okay. I will call you.\n","[SPEAKER_00 0:01:41-0:01:43]: I will send the link. I have sent the link. I will check it.\n","[UNKNOWN 0:01:43-0:01:45]: If you get a new policy, please wait and refer.\n","[UNKNOWN 0:01:46-0:01:47]: Thank you for giving time for the check-in.\n","[UNKNOWN 0:01:49-0:01:49]: Okay.\n","\n","Transcription saved to diarized_translation.txt\n","\n","--- Processing Complete ---\n"]}]},{"cell_type":"code","source":["result_clean = model.transcribe(\"clean_audio.wav\", task=\"translate\", verbose=True )"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"VpeIOR0qgQaX","executionInfo":{"status":"ok","timestamp":1752053967500,"user_tz":-330,"elapsed":798103,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}},"outputId":"e656c446-8750-4770-9982-c233894526fc"},"execution_count":15,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.11/dist-packages/whisper/transcribe.py:132: UserWarning: FP16 is not supported on CPU; using FP32 instead\n","  warnings.warn(\"FP16 is not supported on CPU; using FP32 instead\")\n"]},{"output_type":"stream","name":"stdout","text":["Detecting language using up to the first 30 seconds. Use `--language` to specify the language\n","Detected language: Telugu\n","[00:00.000 --> 00:07.000]  Hello, Hello.\n","[00:07.000 --> 00:12.000]  Hello, I am speaking from Mr. Gokul's office.\n","[00:12.000 --> 00:18.000]  My name is Nandini. I am calling from HBC license. Can you speak for 2 minutes?\n","[00:18.000 --> 00:20.000]  Yes, sure.\n","[00:20.000 --> 00:27.000]  Hello, I am calling from HBC license. Can you speak for 2 minutes?\n","[00:27.000 --> 00:29.000]  Yes, sure.\n","[00:29.000 --> 00:39.000]  Hello, I am calling from HBC license. Can you speak for 2 minutes?\n","[00:39.000 --> 00:42.000]  Yes, sure.\n","[00:42.000 --> 00:49.000]  Hello, I am calling from H Westminster policy number 9750921. What is your policy?\n","[00:49.000 --> 00:55.000]  After you have completed 8th semester, you will get 8th semester of policy.\n","[00:55.000 --> 01:00.000]  You have completed 4th semester of policy in 3rd November 2010.\n","[01:00.000 --> 01:04.000]  Your IDO duration is 3rd November 2012.\n","[01:04.000 --> 01:06.000]  Yes.\n","[01:06.000 --> 01:10.000]  You said that you will do online payment on Saturday for this renewal.\n","[01:10.000 --> 01:14.000]  Will you pay for the payment or will you send the link?\n","[01:14.000 --> 01:18.000]  I will send the link.\n","[01:18.000 --> 01:19.000]  Okay.\n","[01:19.000 --> 01:22.000]  I will send the payment link from the line.\n","[01:22.000 --> 01:26.000]  Please tell me the transaction ID of the page. I will update it here.\n","[01:26.000 --> 01:30.000]  I will see. I will send the link. I will do it in the middle.\n","[01:30.000 --> 01:31.000]  Okay.\n","[01:31.000 --> 01:36.000]  I will call you again after the renewal. I will do the transaction details.\n","[01:36.000 --> 01:38.000]  Can I call you once at around 2 o'clock?\n","[01:38.000 --> 01:40.000]  Yes, sure.\n","[01:40.000 --> 01:42.000]  Okay. I will call you again.\n","[01:42.000 --> 01:44.000]  I will send the link. I will send the section name.\n","[01:44.000 --> 01:46.000]  If you send a new policy, I will wait and refer you.\n","[01:46.000 --> 01:48.000]  Thank you for giving time for the section.\n","[01:48.000 --> 01:49.000]  See you later.\n","[01:49.000 --> 01:50.000]  Bye.\n","[01:50.000 --> 01:51.000]  Bye.\n"]}]},{"cell_type":"code","source":["# result_test = model.transcribe(\"test.wav\", task=\"translate\", temperature=0.5, verbose=True )"],"metadata":{"id":"zmjhkTY2gbwm","executionInfo":{"status":"ok","timestamp":1752053990857,"user_tz":-330,"elapsed":4,"user":{"displayName":"VBS Analytics","userId":"12942825704271409009"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","source":["!whisper \"/content/test.wav\" --model large --language Telugu"],"metadata":{"id":"o_jh7EUrihrF"},"execution_count":null,"outputs":[]}]}